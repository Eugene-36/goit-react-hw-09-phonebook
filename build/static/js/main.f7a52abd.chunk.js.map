{"version":3,"sources":["redux/auth/auth-action.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selector.js","redux/actions/todos-operations.js","redux/actions/contacts-selectors.js","redux/reducers/allUsersReducer.js","redux/actions/userActions.js","components/Navigation.js","components/UserMenu/peppa-8.jpg","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","getisAuthenticated","state","getUserName","addTodo","text","actions","addTodoRequest","then","addTodoSuccess","catch","addTodoError","deleteTodo","todoId","deleteTodoRequest","delete","deleteTodoSuccess","deleteTodoError","getFilter","allUsers","filter","getVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","includes","changeFilter","elem","id","loading","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Container","children","className","authSelector","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","TodoViews","App","this","onCurrentUser","fallback","path","middleware","getDefaultMiddleware","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","serializableCheck","logger","store","next","action","console","log","authPersistConfig","key","storage","whitelist","configureStore","reducer","persistReducer","authReducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7a52abd.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-action\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserRequest]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: false,\r\n  [authActions.loginError]: false,\r\n  [authActions.getCurrentUserError]: false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-action\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n//=====================================================================\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const getisAuthenticated = (state) => state.auth.isAuthenticated;\r\n//console.log(this.props.state);\r\nconst getUserName = (state) => state.auth.user.name;\r\nexport default { getisAuthenticated, getUserName };\r\n","import axios from \"axios\";\r\nimport actions from \"./userActions\";\r\n//axios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst addTodo = (text) => (dispatch) => {\r\n  dispatch(actions.addTodoRequest());\r\n  axios\r\n    .post(\"/contacts\", text)\r\n    .then(({ data }) => dispatch(actions.addTodoSuccess(data)))\r\n    .catch((error) => dispatch(actions.addTodoError(error.message)));\r\n};\r\n\r\nconst deleteTodo = (todoId) => (dispatch) => {\r\n  dispatch(actions.deleteTodoRequest());\r\n  axios\r\n    .delete(`/contacts/${todoId}`)\r\n    .then(() => dispatch(actions.deleteTodoSuccess(todoId)))\r\n    .catch((error) => dispatch(actions.deleteTodoError(error.message)));\r\n};\r\nexport default { addTodo, deleteTodo };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.allUsers.filter;\r\nconst getAllContacts = (state) => state.allUsers.contacts;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\nexport default { getFilter, getVisibleContacts };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n//import actions from \"../actions/userActions\";\r\nimport actions from \"../actions/userActions\";\r\nconst {\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoError,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoError,\r\n  changeFilter,\r\n} = actions;\r\nconst contacts = createReducer([], {\r\n  [addTodoSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteTodoSuccess]: (state, { payload }) =>\r\n    state.filter((elem) => elem.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addTodoRequest]: () => true,\r\n  [addTodoSuccess]: () => false,\r\n  [addTodoError]: () => false,\r\n  [deleteTodoRequest]: () => true,\r\n  [deleteTodoSuccess]: () => false,\r\n  [deleteTodoError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { number } from \"prop-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addTodoRequest = createAction(\"contacts/addTodoRequest\");\r\nconst addTodoSuccess = createAction(\"contacts/addTodoSuccess\");\r\nconst addTodoError = createAction(\"contacts/addTodoError\");\r\n\r\nconst deleteTodoRequest = createAction(\"contacts/deleteTodoRequest\");\r\nconst deleteTodoSuccess = createAction(\"contacts/deleteTodoSuccess\");\r\nconst deleteTodoError = createAction(\"contacts/deleteTodoError\");\r\n\r\nexport const changeFilter = createAction(\"CHANGE_FILTER\");\r\n\r\n//addTodo,\r\nexport default {\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoError,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoError,\r\n  changeFilter,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/todos\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Контакты\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getisAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/peppa-8.b89015db.jpg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\nimport defaultAvatar from \"./peppa-8.jpg\";\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n// import { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid #2A363B\",\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getisAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport \"./Container\";\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport authSelector from \"../redux/auth/auth-selector\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelector.getisAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getisAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { Switch } from \"react-router-dom\";\r\n\r\n//? Новые импорты.\r\nimport AppBar from \"./components/AppBar\";\r\nimport Container from \"./components/Container/Container\";\r\nimport { authOperations } from \"./redux/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\n\r\nconst HomeView = lazy(() => import(\"./view/HomeView\"));\r\nconst RegisterView = lazy(() => import(\"./view/RegisterView\"));\r\nconst LoginView = lazy(() => import(\"./view/LoginView\"));\r\nconst TodoViews = lazy(() => import(\"./view/TodosVIew\"));\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onCurrentUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<p>Загружаем...</p>}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomeView} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              component={RegisterView}\r\n              redirectTo=\"/todos\"\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              component={LoginView}\r\n              restricted\r\n              redirectTo=\"/todos\"\r\n            />\r\n            <PrivateRoute\r\n              path=\"/todos\"\r\n              redirectTo=\"/login\"\r\n              component={TodoViews}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n\r\n// })\r\n\r\nconst mapDispatchToProps = {\r\n  onCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport { reducer } from \"./actions/index\";\r\nimport { authReducer } from \"./auth\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n//console.log(authReducer);\r\nimport storage from \"redux-persist/lib/storage\";\r\nconst myMiddleware = (store) => (next) => (action) => {\r\n  console.log(\"моя прослойка\", action);\r\n\r\n  next(action);\r\n};\r\n// const persistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    serializableCheck: false,\r\n    //\r\n    // },\r\n  }),\r\n  logger,\r\n  myMiddleware,\r\n];\r\n// const todosPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    allUsers: reducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport store from \"./redux/store.js\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}